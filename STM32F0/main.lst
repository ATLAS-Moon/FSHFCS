
main.elf:     file format elf32-littlearm

SYMBOL TABLE:
08000000 l    d  .isr_vector	00000000 .isr_vector
080000c4 l    d  .text	00000000 .text
20000000 l    d  .data	00000000 .data
20000004 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 /tmp/ccTTk8so.o
f108f85f l       *ABS*	00000000 BootRAM
08000328 l       .text	00000000 LoopCopyDataInit
08000320 l       .text	00000000 CopyDataInit
0800033c l       .text	00000000 LoopFillZerobss
08000336 l       .text	00000000 FillZerobss
0800034e l       .text	00000000 LoopForever
08000368 l       .text	00000000 Infinite_Loop
00000000 l    df *ABS*	00000000 _udivsi3.o
080000c4 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 main.c
20000004 l     O .bss	00000002 tick.5922
00000000 l    df *ABS*	00000000 system_stm32f0xx.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 /home/atlas/Toolchains/gcc-arm-none-eabi-6-2017-q2-update/bin/../lib/gcc/arm-none-eabi/6.3.1/thumb/v6-m/crti.o
00000000 l    df *ABS*	00000000 /home/atlas/Toolchains/gcc-arm-none-eabi-6-2017-q2-update/bin/../lib/gcc/arm-none-eabi/6.3.1/thumb/v6-m/crtn.o
08000368  w    F .text	00000002 TIM1_CC_IRQHandler
08000368  w    F .text	00000002 HardFault_Handler
08000368  w    F .text	00000002 ADC1_COMP_IRQHandler
080001dc g     F .text	00000028 SysTick_Handler
08000368  w    F .text	00000002 PVD_IRQHandler
080003cc g       .text	00000000 _sidata
08000368  w    F .text	00000002 PendSV_Handler
08000368  w    F .text	00000002 NMI_Handler
20000008 g       .bss	00000000 __exidx_end
08000368  w    F .text	00000002 I2C1_IRQHandler
080003cc g       .text	00000000 _etext
20000004 g       .bss	00000000 _sbss
20000000 g     O .data	00000004 SystemCoreClock
080000c4 g     F .text	0000010a .hidden __udivsi3
20000000 g       .data	00000000 _sdata
08000368  w    F .text	00000002 SPI1_IRQHandler
08000368  w    F .text	00000002 TIM6_DAC_IRQHandler
20000008 g       .bss	00000000 __exidx_start
0800036c g     F .text	00000048 __libc_init_array
08000368  w    F .text	00000002 EXTI2_3_IRQHandler
080003b4 g     F .text	00000000 _init
08000368  w    F .text	00000002 I2C2_IRQHandler
08000368  w    F .text	00000002 TIM17_IRQHandler
08000368  w    F .text	00000002 RTC_IRQHandler
20000008 g       .bss	00000000 _ebss
08000318  w    F .text	00000038 Reset_Handler
08000368  w    F .text	00000002 TIM16_IRQHandler
08000368  w    F .text	00000002 TIM3_IRQHandler
08000368  w    F .text	00000002 EXTI4_15_IRQHandler
08000368  w    F .text	00000002 RCC_IRQHandler
20000004 g       .bss	00000000 _bss
08000368  w    F .text	00000002 DMA1_Channel1_IRQHandler
08000368 g       .text	00000002 Default_Handler
08000368  w    F .text	00000002 CEC_IRQHandler
08000368  w    F .text	00000002 TIM14_IRQHandler
08000368  w    F .text	00000002 DMA1_Channel4_5_IRQHandler
08000368  w    F .text	00000002 TIM15_IRQHandler
08000368  w    F .text	00000002 EXTI0_1_IRQHandler
080001d8  w    F .text	00000002 .hidden __aeabi_ldiv0
08000368  w    F .text	00000002 SPI2_IRQHandler
08000204 g     F .text	00000060 main
080000c4 g     F .text	00000000 .hidden __aeabi_uidiv
08000368  w    F .text	00000002 SVC_Handler
08000264 g     F .text	000000b4 SystemInit
080003c0 g     F .text	00000000 _fini
08000368  w    F .text	00000002 TS_IRQHandler
08000368  w    F .text	00000002 WWDG_IRQHandler
20000000 g       .data	00000000 _data
08000368  w    F .text	00000002 TIM2_IRQHandler
08000368  w    F .text	00000002 DMA1_Channel2_3_IRQHandler
20002000 g       *ABS*	00000000 _estack
080001d0 g     F .text	00000008 .hidden __aeabi_uidivmod
20000004 g       .data	00000000 _edata
08000368  w    F .text	00000002 USART2_IRQHandler
08000000 g     O .isr_vector	00000000 g_pfnVectors
080001d8  w    F .text	00000002 .hidden __aeabi_idiv0
08000368  w    F .text	00000002 FLASH_IRQHandler
08000368  w    F .text	00000002 USART1_IRQHandler
08000368  w    F .text	00000002 TIM1_BRK_UP_TRG_COM_IRQHandler



Disassembly of section .text:

080000c4 <__udivsi3>:
 80000c4:	2200      	movs	r2, #0
 80000c6:	0843      	lsrs	r3, r0, #1
 80000c8:	428b      	cmp	r3, r1
 80000ca:	d374      	bcc.n	80001b6 <__udivsi3+0xf2>
 80000cc:	0903      	lsrs	r3, r0, #4
 80000ce:	428b      	cmp	r3, r1
 80000d0:	d35f      	bcc.n	8000192 <__udivsi3+0xce>
 80000d2:	0a03      	lsrs	r3, r0, #8
 80000d4:	428b      	cmp	r3, r1
 80000d6:	d344      	bcc.n	8000162 <__udivsi3+0x9e>
 80000d8:	0b03      	lsrs	r3, r0, #12
 80000da:	428b      	cmp	r3, r1
 80000dc:	d328      	bcc.n	8000130 <__udivsi3+0x6c>
 80000de:	0c03      	lsrs	r3, r0, #16
 80000e0:	428b      	cmp	r3, r1
 80000e2:	d30d      	bcc.n	8000100 <__udivsi3+0x3c>
 80000e4:	22ff      	movs	r2, #255	; 0xff
 80000e6:	0209      	lsls	r1, r1, #8
 80000e8:	ba12      	rev	r2, r2
 80000ea:	0c03      	lsrs	r3, r0, #16
 80000ec:	428b      	cmp	r3, r1
 80000ee:	d302      	bcc.n	80000f6 <__udivsi3+0x32>
 80000f0:	1212      	asrs	r2, r2, #8
 80000f2:	0209      	lsls	r1, r1, #8
 80000f4:	d065      	beq.n	80001c2 <__udivsi3+0xfe>
 80000f6:	0b03      	lsrs	r3, r0, #12
 80000f8:	428b      	cmp	r3, r1
 80000fa:	d319      	bcc.n	8000130 <__udivsi3+0x6c>
 80000fc:	e000      	b.n	8000100 <__udivsi3+0x3c>
 80000fe:	0a09      	lsrs	r1, r1, #8
 8000100:	0bc3      	lsrs	r3, r0, #15
 8000102:	428b      	cmp	r3, r1
 8000104:	d301      	bcc.n	800010a <__udivsi3+0x46>
 8000106:	03cb      	lsls	r3, r1, #15
 8000108:	1ac0      	subs	r0, r0, r3
 800010a:	4152      	adcs	r2, r2
 800010c:	0b83      	lsrs	r3, r0, #14
 800010e:	428b      	cmp	r3, r1
 8000110:	d301      	bcc.n	8000116 <__udivsi3+0x52>
 8000112:	038b      	lsls	r3, r1, #14
 8000114:	1ac0      	subs	r0, r0, r3
 8000116:	4152      	adcs	r2, r2
 8000118:	0b43      	lsrs	r3, r0, #13
 800011a:	428b      	cmp	r3, r1
 800011c:	d301      	bcc.n	8000122 <__udivsi3+0x5e>
 800011e:	034b      	lsls	r3, r1, #13
 8000120:	1ac0      	subs	r0, r0, r3
 8000122:	4152      	adcs	r2, r2
 8000124:	0b03      	lsrs	r3, r0, #12
 8000126:	428b      	cmp	r3, r1
 8000128:	d301      	bcc.n	800012e <__udivsi3+0x6a>
 800012a:	030b      	lsls	r3, r1, #12
 800012c:	1ac0      	subs	r0, r0, r3
 800012e:	4152      	adcs	r2, r2
 8000130:	0ac3      	lsrs	r3, r0, #11
 8000132:	428b      	cmp	r3, r1
 8000134:	d301      	bcc.n	800013a <__udivsi3+0x76>
 8000136:	02cb      	lsls	r3, r1, #11
 8000138:	1ac0      	subs	r0, r0, r3
 800013a:	4152      	adcs	r2, r2
 800013c:	0a83      	lsrs	r3, r0, #10
 800013e:	428b      	cmp	r3, r1
 8000140:	d301      	bcc.n	8000146 <__udivsi3+0x82>
 8000142:	028b      	lsls	r3, r1, #10
 8000144:	1ac0      	subs	r0, r0, r3
 8000146:	4152      	adcs	r2, r2
 8000148:	0a43      	lsrs	r3, r0, #9
 800014a:	428b      	cmp	r3, r1
 800014c:	d301      	bcc.n	8000152 <__udivsi3+0x8e>
 800014e:	024b      	lsls	r3, r1, #9
 8000150:	1ac0      	subs	r0, r0, r3
 8000152:	4152      	adcs	r2, r2
 8000154:	0a03      	lsrs	r3, r0, #8
 8000156:	428b      	cmp	r3, r1
 8000158:	d301      	bcc.n	800015e <__udivsi3+0x9a>
 800015a:	020b      	lsls	r3, r1, #8
 800015c:	1ac0      	subs	r0, r0, r3
 800015e:	4152      	adcs	r2, r2
 8000160:	d2cd      	bcs.n	80000fe <__udivsi3+0x3a>
 8000162:	09c3      	lsrs	r3, r0, #7
 8000164:	428b      	cmp	r3, r1
 8000166:	d301      	bcc.n	800016c <__udivsi3+0xa8>
 8000168:	01cb      	lsls	r3, r1, #7
 800016a:	1ac0      	subs	r0, r0, r3
 800016c:	4152      	adcs	r2, r2
 800016e:	0983      	lsrs	r3, r0, #6
 8000170:	428b      	cmp	r3, r1
 8000172:	d301      	bcc.n	8000178 <__udivsi3+0xb4>
 8000174:	018b      	lsls	r3, r1, #6
 8000176:	1ac0      	subs	r0, r0, r3
 8000178:	4152      	adcs	r2, r2
 800017a:	0943      	lsrs	r3, r0, #5
 800017c:	428b      	cmp	r3, r1
 800017e:	d301      	bcc.n	8000184 <__udivsi3+0xc0>
 8000180:	014b      	lsls	r3, r1, #5
 8000182:	1ac0      	subs	r0, r0, r3
 8000184:	4152      	adcs	r2, r2
 8000186:	0903      	lsrs	r3, r0, #4
 8000188:	428b      	cmp	r3, r1
 800018a:	d301      	bcc.n	8000190 <__udivsi3+0xcc>
 800018c:	010b      	lsls	r3, r1, #4
 800018e:	1ac0      	subs	r0, r0, r3
 8000190:	4152      	adcs	r2, r2
 8000192:	08c3      	lsrs	r3, r0, #3
 8000194:	428b      	cmp	r3, r1
 8000196:	d301      	bcc.n	800019c <__udivsi3+0xd8>
 8000198:	00cb      	lsls	r3, r1, #3
 800019a:	1ac0      	subs	r0, r0, r3
 800019c:	4152      	adcs	r2, r2
 800019e:	0883      	lsrs	r3, r0, #2
 80001a0:	428b      	cmp	r3, r1
 80001a2:	d301      	bcc.n	80001a8 <__udivsi3+0xe4>
 80001a4:	008b      	lsls	r3, r1, #2
 80001a6:	1ac0      	subs	r0, r0, r3
 80001a8:	4152      	adcs	r2, r2
 80001aa:	0843      	lsrs	r3, r0, #1
 80001ac:	428b      	cmp	r3, r1
 80001ae:	d301      	bcc.n	80001b4 <__udivsi3+0xf0>
 80001b0:	004b      	lsls	r3, r1, #1
 80001b2:	1ac0      	subs	r0, r0, r3
 80001b4:	4152      	adcs	r2, r2
 80001b6:	1a41      	subs	r1, r0, r1
 80001b8:	d200      	bcs.n	80001bc <__udivsi3+0xf8>
 80001ba:	4601      	mov	r1, r0
 80001bc:	4152      	adcs	r2, r2
 80001be:	4610      	mov	r0, r2
 80001c0:	4770      	bx	lr
 80001c2:	e7ff      	b.n	80001c4 <__udivsi3+0x100>
 80001c4:	b501      	push	{r0, lr}
 80001c6:	2000      	movs	r0, #0
 80001c8:	f000 f806 	bl	80001d8 <__aeabi_idiv0>
 80001cc:	bd02      	pop	{r1, pc}
 80001ce:	46c0      	nop			; (mov r8, r8)

080001d0 <__aeabi_uidivmod>:
 80001d0:	2900      	cmp	r1, #0
 80001d2:	d0f7      	beq.n	80001c4 <__udivsi3+0x100>
 80001d4:	e776      	b.n	80000c4 <__udivsi3>
 80001d6:	4770      	bx	lr

080001d8 <__aeabi_idiv0>:
 80001d8:	4770      	bx	lr
 80001da:	46c0      	nop			; (mov r8, r8)

080001dc <SysTick_Handler>:
#include "stm32f0xx_conf.h"

void SysTick_Handler(void) {
  static uint16_t tick = 0;

  switch (tick++) {
 80001dc:	4a07      	ldr	r2, [pc, #28]	; (80001fc <SysTick_Handler+0x20>)
 80001de:	8813      	ldrh	r3, [r2, #0]
 80001e0:	2b64      	cmp	r3, #100	; 0x64
 80001e2:	d002      	beq.n	80001ea <SysTick_Handler+0xe>
 80001e4:	3301      	adds	r3, #1
 80001e6:	8013      	strh	r3, [r2, #0]
  	case 100:
  		tick = 0;
  		GPIOC->ODR ^= (1 << 8);
  		break;
  }
}
 80001e8:	4770      	bx	lr
  		tick = 0;
 80001ea:	2300      	movs	r3, #0
 80001ec:	8013      	strh	r3, [r2, #0]
  		GPIOC->ODR ^= (1 << 8);
 80001ee:	4a04      	ldr	r2, [pc, #16]	; (8000200 <SysTick_Handler+0x24>)
 80001f0:	3301      	adds	r3, #1
 80001f2:	8a91      	ldrh	r1, [r2, #20]
 80001f4:	33ff      	adds	r3, #255	; 0xff
 80001f6:	404b      	eors	r3, r1
 80001f8:	8293      	strh	r3, [r2, #20]
}
 80001fa:	e7f5      	b.n	80001e8 <SysTick_Handler+0xc>
 80001fc:	20000004 	.word	0x20000004
 8000200:	48000800 	.word	0x48000800

08000204 <main>:

int main(void)
{

	RCC->AHBENR |= RCC_AHBENR_GPIOCEN; 	// enable the clock to GPIOC
 8000204:	2380      	movs	r3, #128	; 0x80
 8000206:	4a11      	ldr	r2, [pc, #68]	; (800024c <main+0x48>)
 8000208:	031b      	lsls	r3, r3, #12
 800020a:	6951      	ldr	r1, [r2, #20]
{
 800020c:	b510      	push	{r4, lr}
	RCC->AHBENR |= RCC_AHBENR_GPIOCEN; 	// enable the clock to GPIOC
 800020e:	430b      	orrs	r3, r1
 8000210:	6153      	str	r3, [r2, #20]
						//(RM0091 lists this as IOPCEN, not GPIOCEN)

	GPIOC->MODER = (1 << 16);
 8000212:	2280      	movs	r2, #128	; 0x80
 8000214:	4b0e      	ldr	r3, [pc, #56]	; (8000250 <main+0x4c>)
 8000216:	0252      	lsls	r2, r2, #9
 8000218:	601a      	str	r2, [r3, #0]

	SysTick_Config(SystemCoreClock/100);
 800021a:	4b0e      	ldr	r3, [pc, #56]	; (8000254 <main+0x50>)
 800021c:	2164      	movs	r1, #100	; 0x64
 800021e:	6818      	ldr	r0, [r3, #0]
 8000220:	f7ff ff50 	bl	80000c4 <__udivsi3>
    \return          0  Function succeeded
    \return          1  Function failed
 */
static __INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */
 8000224:	4b0c      	ldr	r3, [pc, #48]	; (8000258 <main+0x54>)
 8000226:	4298      	cmp	r0, r3
 8000228:	d80e      	bhi.n	8000248 <main+0x44>
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 800022a:	21c0      	movs	r1, #192	; 0xc0

  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
 800022c:	4a0b      	ldr	r2, [pc, #44]	; (800025c <main+0x58>)
 800022e:	3801      	subs	r0, #1
 8000230:	6050      	str	r0, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 8000232:	480b      	ldr	r0, [pc, #44]	; (8000260 <main+0x5c>)
 8000234:	0609      	lsls	r1, r1, #24
 8000236:	6a03      	ldr	r3, [r0, #32]
 8000238:	021b      	lsls	r3, r3, #8
 800023a:	0a1b      	lsrs	r3, r3, #8
 800023c:	430b      	orrs	r3, r1
 800023e:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System Interrupts */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 8000240:	2300      	movs	r3, #0
 8000242:	6093      	str	r3, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000244:	3307      	adds	r3, #7
 8000246:	6013      	str	r3, [r2, #0]
 8000248:	e7fe      	b.n	8000248 <main+0x44>
 800024a:	46c0      	nop			; (mov r8, r8)
 800024c:	40021000 	.word	0x40021000
 8000250:	48000800 	.word	0x48000800
 8000254:	20000000 	.word	0x20000000
 8000258:	00ffffff 	.word	0x00ffffff
 800025c:	e000e010 	.word	0xe000e010
 8000260:	e000ed00 	.word	0xe000ed00

08000264 <SystemInit>:
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{    
 8000264:	b513      	push	{r0, r1, r4, lr}
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8000266:	2401      	movs	r4, #1
 8000268:	4b24      	ldr	r3, [pc, #144]	; (80002fc <SystemInit+0x98>)

  /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
  RCC->CFGR &= (uint32_t)0xF8FFB80C;
 800026a:	4925      	ldr	r1, [pc, #148]	; (8000300 <SystemInit+0x9c>)
  RCC->CR |= (uint32_t)0x00000001;
 800026c:	681a      	ldr	r2, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;

  /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
  RCC->CFGR &= (uint32_t)0xFFC0FFFF;
 800026e:	4825      	ldr	r0, [pc, #148]	; (8000304 <SystemInit+0xa0>)
  RCC->CR |= (uint32_t)0x00000001;
 8000270:	4322      	orrs	r2, r4
 8000272:	601a      	str	r2, [r3, #0]
  RCC->CFGR &= (uint32_t)0xF8FFB80C;
 8000274:	685a      	ldr	r2, [r3, #4]
 8000276:	400a      	ands	r2, r1
 8000278:	605a      	str	r2, [r3, #4]
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800027a:	681a      	ldr	r2, [r3, #0]
 800027c:	4922      	ldr	r1, [pc, #136]	; (8000308 <SystemInit+0xa4>)
 800027e:	400a      	ands	r2, r1
 8000280:	601a      	str	r2, [r3, #0]
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8000282:	681a      	ldr	r2, [r3, #0]
 8000284:	4921      	ldr	r1, [pc, #132]	; (800030c <SystemInit+0xa8>)
 8000286:	400a      	ands	r2, r1
 8000288:	601a      	str	r2, [r3, #0]
  RCC->CFGR &= (uint32_t)0xFFC0FFFF;
 800028a:	685a      	ldr	r2, [r3, #4]
 800028c:	4002      	ands	r2, r0
 800028e:	605a      	str	r2, [r3, #4]

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
 8000290:	220f      	movs	r2, #15
 8000292:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8000294:	4391      	bics	r1, r2
 8000296:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Reset USARTSW[1:0], I2CSW, CECSW and ADCSW bits */
  RCC->CFGR3 &= (uint32_t)0xFFFFFEAC;
 8000298:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800029a:	4a1d      	ldr	r2, [pc, #116]	; (8000310 <SystemInit+0xac>)
 800029c:	4011      	ands	r1, r2
 800029e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Reset HSI14 bit */
  RCC->CR2 &= (uint32_t)0xFFFFFFFE;
 80002a0:	6b59      	ldr	r1, [r3, #52]	; 0x34
  /* SYSCLK, HCLK, PCLK configuration ----------------------------------------*/
#if defined (PLL_SOURCE_HSI)
  /* At this stage the HSI is already enabled */

  /* Enable Prefetch Buffer and set Flash Latency */
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;
 80002a2:	4a1c      	ldr	r2, [pc, #112]	; (8000314 <SystemInit+0xb0>)
  RCC->CR2 &= (uint32_t)0xFFFFFFFE;
 80002a4:	43a1      	bics	r1, r4
 80002a6:	6359      	str	r1, [r3, #52]	; 0x34
  RCC->CIR = 0x00000000;
 80002a8:	2100      	movs	r1, #0
 80002aa:	6099      	str	r1, [r3, #8]
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 80002ac:	9100      	str	r1, [sp, #0]
 80002ae:	9101      	str	r1, [sp, #4]
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;
 80002b0:	3111      	adds	r1, #17
 80002b2:	6011      	str	r1, [r2, #0]
 
  /* HCLK = SYSCLK */
  RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 80002b4:	685a      	ldr	r2, [r3, #4]
 80002b6:	605a      	str	r2, [r3, #4]
      
  /* PCLK = HCLK */
  RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE_DIV1;
 80002b8:	685a      	ldr	r2, [r3, #4]
 80002ba:	605a      	str	r2, [r3, #4]

  /* PLL configuration = (HSI/2) * 12 = ~48 MHz */
  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 80002bc:	685a      	ldr	r2, [r3, #4]
 80002be:	4002      	ands	r2, r0
 80002c0:	605a      	str	r2, [r3, #4]
  RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSI_Div2 | RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLMULL12);
 80002c2:	22a0      	movs	r2, #160	; 0xa0
 80002c4:	6859      	ldr	r1, [r3, #4]
 80002c6:	0392      	lsls	r2, r2, #14
 80002c8:	430a      	orrs	r2, r1
 80002ca:	605a      	str	r2, [r3, #4]
            
  /* Enable PLL */
  RCC->CR |= RCC_CR_PLLON;
 80002cc:	2280      	movs	r2, #128	; 0x80
 80002ce:	6819      	ldr	r1, [r3, #0]
 80002d0:	0452      	lsls	r2, r2, #17
 80002d2:	430a      	orrs	r2, r1
 80002d4:	601a      	str	r2, [r3, #0]

  /* Wait till PLL is ready */
  while((RCC->CR & RCC_CR_PLLRDY) == 0)
 80002d6:	2280      	movs	r2, #128	; 0x80
 80002d8:	0492      	lsls	r2, r2, #18
 80002da:	6819      	ldr	r1, [r3, #0]
 80002dc:	4211      	tst	r1, r2
 80002de:	d0fc      	beq.n	80002da <SystemInit+0x76>
  {
  }

  /* Select PLL as system clock source */
  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 80002e0:	2103      	movs	r1, #3
 80002e2:	685a      	ldr	r2, [r3, #4]
 80002e4:	438a      	bics	r2, r1
 80002e6:	605a      	str	r2, [r3, #4]
  RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 80002e8:	2202      	movs	r2, #2
 80002ea:	6859      	ldr	r1, [r3, #4]
 80002ec:	430a      	orrs	r2, r1

  /* Wait till PLL is used as system clock source */
  while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 80002ee:	210c      	movs	r1, #12
  RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 80002f0:	605a      	str	r2, [r3, #4]
  while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 80002f2:	685a      	ldr	r2, [r3, #4]
 80002f4:	400a      	ands	r2, r1
 80002f6:	2a08      	cmp	r2, #8
 80002f8:	d1fb      	bne.n	80002f2 <SystemInit+0x8e>
}
 80002fa:	bd13      	pop	{r0, r1, r4, pc}
 80002fc:	40021000 	.word	0x40021000
 8000300:	f8ffb80c 	.word	0xf8ffb80c
 8000304:	ffc0ffff 	.word	0xffc0ffff
 8000308:	fef6ffff 	.word	0xfef6ffff
 800030c:	fffbffff 	.word	0xfffbffff
 8000310:	fffffeac 	.word	0xfffffeac
 8000314:	40022000 	.word	0x40022000

08000318 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000318:	480d      	ldr	r0, [pc, #52]	; (8000350 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800031a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 800031c:	2100      	movs	r1, #0
  b LoopCopyDataInit
 800031e:	e003      	b.n	8000328 <LoopCopyDataInit>

08000320 <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 8000320:	4b0c      	ldr	r3, [pc, #48]	; (8000354 <LoopForever+0x6>)
  ldr r3, [r3, r1]
 8000322:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 8000324:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 8000326:	3104      	adds	r1, #4

08000328 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 8000328:	480b      	ldr	r0, [pc, #44]	; (8000358 <LoopForever+0xa>)
  ldr r3, =_edata
 800032a:	4b0c      	ldr	r3, [pc, #48]	; (800035c <LoopForever+0xe>)
  adds r2, r0, r1
 800032c:	1842      	adds	r2, r0, r1
  cmp r2, r3
 800032e:	429a      	cmp	r2, r3
  bcc CopyDataInit
 8000330:	d3f6      	bcc.n	8000320 <CopyDataInit>
  ldr r2, =_sbss
 8000332:	4a0b      	ldr	r2, [pc, #44]	; (8000360 <LoopForever+0x12>)
  b LoopFillZerobss
 8000334:	e002      	b.n	800033c <LoopFillZerobss>

08000336 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 8000336:	2300      	movs	r3, #0
  str  r3, [r2]
 8000338:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800033a:	3204      	adds	r2, #4

0800033c <LoopFillZerobss>:


LoopFillZerobss:
  ldr r3, = _ebss
 800033c:	4b09      	ldr	r3, [pc, #36]	; (8000364 <LoopForever+0x16>)
  cmp r2, r3
 800033e:	429a      	cmp	r2, r3
  bcc FillZerobss
 8000340:	d3f9      	bcc.n	8000336 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8000342:	f7ff ff8f 	bl	8000264 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000346:	f000 f811 	bl	800036c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800034a:	f7ff ff5b 	bl	8000204 <main>

0800034e <LoopForever>:
  
LoopForever:
    b LoopForever
 800034e:	e7fe      	b.n	800034e <LoopForever>
  ldr   r0, =_estack
 8000350:	20002000 	.word	0x20002000
  ldr r3, =_sidata
 8000354:	080003cc 	.word	0x080003cc
  ldr r0, =_sdata
 8000358:	20000000 	.word	0x20000000
  ldr r3, =_edata
 800035c:	20000004 	.word	0x20000004
  ldr r2, =_sbss
 8000360:	20000004 	.word	0x20000004
  ldr r3, = _ebss
 8000364:	20000008 	.word	0x20000008

08000368 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000368:	e7fe      	b.n	8000368 <ADC1_COMP_IRQHandler>
	...

0800036c <__libc_init_array>:
 800036c:	b570      	push	{r4, r5, r6, lr}
 800036e:	4e0d      	ldr	r6, [pc, #52]	; (80003a4 <__libc_init_array+0x38>)
 8000370:	4d0d      	ldr	r5, [pc, #52]	; (80003a8 <__libc_init_array+0x3c>)
 8000372:	2400      	movs	r4, #0
 8000374:	1bad      	subs	r5, r5, r6
 8000376:	10ad      	asrs	r5, r5, #2
 8000378:	d005      	beq.n	8000386 <__libc_init_array+0x1a>
 800037a:	00a3      	lsls	r3, r4, #2
 800037c:	58f3      	ldr	r3, [r6, r3]
 800037e:	3401      	adds	r4, #1
 8000380:	4798      	blx	r3
 8000382:	42a5      	cmp	r5, r4
 8000384:	d1f9      	bne.n	800037a <__libc_init_array+0xe>
 8000386:	f000 f815 	bl	80003b4 <_init>
 800038a:	4e08      	ldr	r6, [pc, #32]	; (80003ac <__libc_init_array+0x40>)
 800038c:	4d08      	ldr	r5, [pc, #32]	; (80003b0 <__libc_init_array+0x44>)
 800038e:	2400      	movs	r4, #0
 8000390:	1bad      	subs	r5, r5, r6
 8000392:	10ad      	asrs	r5, r5, #2
 8000394:	d005      	beq.n	80003a2 <__libc_init_array+0x36>
 8000396:	00a3      	lsls	r3, r4, #2
 8000398:	58f3      	ldr	r3, [r6, r3]
 800039a:	3401      	adds	r4, #1
 800039c:	4798      	blx	r3
 800039e:	42a5      	cmp	r5, r4
 80003a0:	d1f9      	bne.n	8000396 <__libc_init_array+0x2a>
 80003a2:	bd70      	pop	{r4, r5, r6, pc}
	...

080003b4 <_init>:
 80003b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003b6:	46c0      	nop			; (mov r8, r8)
 80003b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ba:	bc08      	pop	{r3}
 80003bc:	469e      	mov	lr, r3
 80003be:	4770      	bx	lr

080003c0 <_fini>:
 80003c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003c2:	46c0      	nop			; (mov r8, r8)
 80003c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003c6:	bc08      	pop	{r3}
 80003c8:	469e      	mov	lr, r3
 80003ca:	4770      	bx	lr
